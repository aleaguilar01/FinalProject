generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DB_URL")
}

model User {
  id             String     @id @default(uuid())
  provider       Provider?
  providerId     String?
  email          String     @unique
  profilePicture String?
  password       String?
  createdAt      DateTime   @default(now())
  updatedAt      DateTime   @updatedAt
  userbook       UserBook[]
}

enum Provider {
  GOOGLE
  SPOTIFY
}

model Playlist {
  id          String   @id @default(uuid())
  name        String
  picture     String?
  description String?  @db.Text
  userbook    UserBook @relation(fields: [id], references: [id])
}

model UserBook {
  id            String        @id @default(uuid())
  user          User          @relation(fields: [userId], references: [id])
  userId        String
  book          Book          @relation(fields: [bookId], references: [isbn])
  bookId        String
  readingStatus ReadingStatus @default(WANT_TO_READ)
  playlist      Playlist?
  playlistId    String?
  rating        Float?
  isFavorite    Boolean?      @default(false)
  createdAt     DateTime?     @default(now())
  updatedAt     DateTime?     @updatedAt
}

enum ReadingStatus {
  WANT_TO_READ
  READING
  READ
  RE_READING
  DID_NOT_FINISH
}

model BookGenres {
  id        String   @id @default(uuid())
  name      String   @unique
  books     Book[]   @relation("BookToGenre")
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Book {
  isbn          String       @id
  title         String
  author        String
  rating        Float?
  publishedYear Int?
  numberOfPages Int?
  firstSentence String?
  imageUrl      String?
  users         UserBook[]
  genres        BookGenres[] @relation("BookToGenre")
  relatedBooks  Book[]       @relation("RelatedBooks")
  relatedTo     Book[]       @relation("RelatedBooks")
}
